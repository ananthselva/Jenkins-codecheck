pipeline {
  agent any
  
  
    tools{
     jdk 'jdk17'
     node '18.16.0'
   
   } 
   
      environment {
          SCANNER_HOME = toll 'sonar-scanner'
      }
        
     stages {
         stage ('git'){
          steps {
             git branch: 'main', url: 'https://github.com/ananthselva/Docker-mysql.git'
         }
        }  
     } 
     
     stage ('build') {
         steps {
             echo 'build run'
         }
     } 
     
       stage ('Fbugs testing') {
           steps {
              dependencyCheck additionalArguments: '--scan  /var/lib/jenkins/workspace/fusion--pipe --format "ALL"', odcInstallation: 'bug-check'
              dependencyCheckPublisher pattern: 'dependency-check-report.xml'

           }
       }
       
       stage ("sonarqube") {
         steps{
           withSonarQubeEnv('sonar') {
              sh '''$SCANNER_HOME/bin/sonar-scanner-Dsonar.projectName=Dockermysql \
              -Dsonar.java.binaries=. \
              -Dsonar.projectKey=Devopsmysql '''
         }
       }

        stage ("trivy") {
            steps {
              sh "trivy fs . " 
            }
        }      
       
     stage ('result') {
         steps {
             echo 'testing successfully'
             
           }
        }
      }
  }
  
  
  
  
  
    
